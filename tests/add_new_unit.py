#!/usr/bin/python3

name = input('Enter the name of the unit (for example: wildhorn_herd): ')
advance = input('Enter the advance of the unit: ')
march = input('Enter the march of the unit: ')
discipline = input('Enter the discipline of the unit: ')
health_points = input('Enter the health point of the unit: ')
defense = input('Enter the defense of the unit: ')
resilience = input('Enter the resilience of the unit: ')
armour = input('Enter the armour of the unit: ')
aegis = input('Enter the aegis of the unit: ')
attack = input('Enter the attack of the unit: ')
offensive = input('Enter the offensive of the unit: ')
strength = input('Enter the strength of the unit: ')
armour_penetration = input('Enter the armour penetration of the unit: ')
agility = input('Enter the agility of the unit: ')
nb_rows = input('Enter the number of rows of the unit: ')
nb_columns = input('Enter the number of columns of the unit: ')
nb_models = input('Enter the number of models of the unit: ')

with open('tests/initialize_units.rs', 'a') as f:
    f.write('\n')
    f.write(f'pub fn initialize_{name}() -> regiment::Regiment ' + '{\n')
    f.write(f'    let {name}_stats: model::Stats = model::Stats::new(\n')
    f.write('        model::GlobalStats {\n')
    f.write(f'            advance: {advance},\n')
    f.write(f'            march: {march},\n')
    f.write(f'            discipline: {discipline},\n')
    f.write('        },\n')
    f.write('        model::DefensiveStats {\n')
    f.write(f'            health_points: {health_points},\n')
    f.write(f'            defense: {defense},\n')
    f.write(f'            resilience: {resilience},\n')
    f.write(f'            armour: {armour},\n')
    f.write(f'            aegis: {aegis},\n')
    f.write('        },\n')
    f.write('        model::OffensiveStats {\n')
    f.write(f'            attack: {attack},\n')
    f.write(f'            offensive: {offensive},\n')
    f.write(f'            strength: {strength},\n')
    f.write(f'            armour_penetration: {armour_penetration},\n')
    f.write(f'            agility: {agility},\n')
    f.write('        },\n')
    f.write('    );\n')
    f.write(f'    let {name}_modifier: modifier::Modifier =\n')
    f.write(f'        modifier::Modifier::new_weapon(None, 0, 0);\n')
    f.write(f'    let model_{name}: model::Model =\n')
    f.write(f'        model::Model::new({name}_stats, vec![{name}_modifier]);\n')
    f.write(f'    let {name}: regiment::Regiment = regiment::Regiment::new(model_{name}, {nb_rows}, {nb_columns}, {nb_models}, None);\n')
    f.write(f'    return {name};\n')
    f.write('}\n')
